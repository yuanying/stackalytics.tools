<html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="css/bootstrap.min.css" rel="stylesheet" media="screen">
  <script src="http://code.jquery.com/jquery.js"></script>
  <script src="js/bootstrap.min.js"></script>
  <script src="js/Chart.min.js"></script>
  <script src="js/stackalytics.js"></script>
  <title>Stackalytics.Chart</title>
  <style type="text/css">
  .container {width: auto;}
  .chart_off {
    color: #cccccc;
  }
  /* Sticky footer styles
  -------------------------------------------------- */
  html {
    position: relative;
    min-height: 100%;
  }
  body {
    /* Margin bottom by footer height */
    margin-bottom: 60px;
  }
  .footer {
    position: absolute;
    bottom: 0;
    width: 100%;
    /* Set the fixed height of the footer here */
    height: 60px;
    background-color: #f5f5f5;
  }
  .footer .container {
    padding: 1em;
    padding-left: 3em;
  }
  </style>
  <script>
  var datasets = commitsDataset = [
    <% commits_data.each_with_index do |(id, metric), index| %>
      <% color = get_color(index) %>
    {
      label: "<%= _short_id(id) %>",
      fillColor : "<%= color[1] %>",
      strokeColor : "<%= color[0] %>",
      pointColor : "<%= color[0] %>",
      pointStrokeColor : "#fff",
      pointHighlightFill : "#fff",
      pointHighlightStroke : "<%= color[0] %>",
      data : [ <%= metric.join(', ') %> ],
      chart_off: false
    },
    <% end %>
  ];
  var labels = commitsLabel = [<%= commits_labels.map{|l| "\"#{short_date(l)}\"" }.join(', ') %>]
  var reviewsDataset = [
    <% reviews_data.each_with_index do |(id, metric), index| %>
      <% color = get_color(index) %>
    {
      label: "<%= _short_id(id) %>",
      fillColor : "<%= color[1] %>",
      strokeColor : "<%= color[0] %>",
      pointColor : "<%= color[0] %>",
      pointStrokeColor : "#fff",
      pointHighlightFill : "#fff",
      pointHighlightStroke : "<%= color[0] %>",
      data : [ <%= metric.join(', ') %> ],
      chart_off: false
    },
    <% end %>
  ];
  var reviewsLabel = [<%= reviews_labels.map{|l| "\"#{short_date(l)}\"" }.join(', ') %>]

  var filterDatasets = function(id, chart_off) {
    var data = [reviewsDataset, commitsDataset];
    for(var j=0; j<data.length; j++) {
      var sets = data[j]
      for(var i=0; i<sets.length; i++) {
        if (id == 'all' || sets[i].label == id ) {
          sets[i].chart_off = chart_off;
        }
      }
    }
  };
  var isChartoff = function(name) {
    for(var i=0; i<datasets.length; i++) {
      if (datasets[i].label == name ) {
        return datasets[i].chart_off;
      }
    }
  }

  $(function() {
    $('#commitsLink').click(function() {
      labels = commitsLabel;
      datasets = commitsDataset;
      draw(labels, datasets);
    });
    $('#reviewsLink').click(function() {
      labels = reviewsLabel;
      datasets = reviewsDataset;
      draw(labels, datasets);
    });

    jQuery(document).ready(function ($) {
      $('#tabs').tab();
    });
    var showAll = function() {
      $('.person').removeClass("chart_off");
      filterDatasets('all', false)
      draw(labels, datasets);
    };
    $('#showAll').click(showAll);

    var hideAll = function() {
      $('.person').addClass("chart_off");
      filterDatasets('all', true)
      draw(labels, datasets);
    };
    $('#hideAll').click(hideAll);

    var switcher = function() {
      var name = this.title;
      var chart_off = $(this).hasClass("chart_off");
      if (chart_off) {
        $('[title='+name+']').removeClass("chart_off");
        chart_off = false;
      } else {
        $('[title='+name+']').addClass("chart_off");
        chart_off = true;
      }
      filterDatasets(name, chart_off);
      draw(labels, datasets);
    };
    <% commits_data.each do |id, metric| %>
    $('#commits_<%=_short_id(id)%>').click(switcher);
    <% end %>
    <% reviews_data.each do |id, metric| %>
    $('#reviews_<%=_short_id(id)%>').click(switcher);
    <% end %>

    var ctx = document.getElementById("canvas").getContext("2d");
    var draw = stackalytics.createDrawFunction(ctx);
    draw(labels, datasets);
  });
  </script>
</head>
<body>
<div class='container'>
  <h1><%= company %></h1>

  <ol class="breadcrumb">
    <li><a href="./index.html">Home</a></li>
    <li class="active"><%= company %></li>
  </ol>

  <div>
    <a class='btn btn-primary' href='<%=company%>.xlsx'>Excel</a>
    <a class='btn btn-default' href="http://stackalytics.com/?company=<%=company%>">
      Stackalytics
    </a>
  </div>

  <div>
    <canvas id="canvas" height="600" width="1200"></canvas>
  </div>

  <div class="btn-group pull-right" role="group" aria-label="...">
    <button id='showAll' type="button" class="btn btn-success">Show ALL</button>
    <button id='hideAll' type="button" class="btn btn-danger">Hide All</button>
  </div>

  <ul id='tabs' class="nav nav-tabs" data-tabs="tabs">
    <li role="presentation" class="active"><a id='commitsLink' data-toggle="tab" href="#commits">Commits</a></li>
    <li role="presentation"><a id='reviewsLink' data-toggle="tab" href="#reviews">Reviews</a></li>
  </ul>

  <div class="tab-content">

    <div class="tab-pane active" id="commits">
      <table class='table table-hover'>
        <tr>
          <th></th>
          <th></th>
          <% commits_labels.each do |label| %>
            <th><%= short_date(label) %></th>
          <% end %>
        </tr>
        <% commits_data.each_with_index do |(id, metric), index| %>
          <% color = get_color(index) %>
        <tr class='person' id='commits_<%=_short_id(id)%>' title='<%=_short_id(id)%>'>
          <td style="background-color: <%= color[0] %>;">&nbsp;</td>
          <td class='name'>
            <a href="http://stackalytics.com/?user_id=<%=id%>">
              <%= _short_id(id) %>
            </a>
          </td>
          <% metric.each do |m| %>
          <td class='metric'><%= m %></td>
          <% end %>
        </tr>
        <% end %>
      </table>
    </div>

    <div class="tab-pane" id="reviews">
      <table class='table table-hover'>
        <tr>
          <th></th>
          <th></th>
          <% reviews_labels.each do |label| %>
            <th><%= short_date(label) %></th>
          <% end %>
        </tr>
        <% reviews_data.each_with_index do |(id, metric), index| %>
          <% color = get_color(index) %>
        <tr class='person' id='reviews_<%=_short_id(id)%>' title='<%=_short_id(id)%>'>
          <td style="background-color: <%= color[0] %>;">&nbsp;</td>
          <td class='name'>
            <a href="http://stackalytics.com/?user_id=<%=id%>">
              <%= _short_id(id) %>
            </a>
          </td>
          <% metric.each do |m| %>
          <td class='metric'><%= m %></td>
          <% end %>
        </tr>
        <% end %>
      </table>    </div>
  </div>

<footer class="footer">
  <div class="container">
    <p class="text-muted"><a href="https://github.com/yuanying/stackalytics.tools">stackalytics.tools</a></p>
  </div>
</footer>

</body>
</html>
